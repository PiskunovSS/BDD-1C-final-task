//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУдаляюВсеЭлементыИз(Парам01,Парам02)","ЯУдаляюВсеЭлементыИз","И я удаляю все элементы из ""справочник"" ""Номенклатура""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗагружаюДанныеИзФикстуры(Парам01)","ЯЗагружаюДанныеИзФикстуры","и я загружаю данные из фикстуры ""ЭлементыНоменклатуры""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСоздаюНовыйДокумент()","ЯСоздаюНовыйДокумент","Допустим я создаю новый документ");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗаполняюТабличнуюЧасть()","ЯЗаполняюТабличнуюЧасть","Когда я заполняю табличную часть");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВыполняюПроведениеДокумента()","ЯВыполняюПроведениеДокумента","и я выполняю проведение документа");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДокументПроведенКорретно()","ДокументПроведенКорретно","Тогда документ проведен корретно");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

&НаСервере
Процедура УдалитьВсеЭлементыТаблицыОбъектногоТипа(ИмяКоллекции, ИмяТаблицы)
	
	Попытка
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Таблица.Ссылка
		|ИЗ
		|	" + ИмяКоллекции +"." + ИмяТаблицы + " КАК Таблица";
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
		
			ОбъектДляУдаления = Выборка.Ссылка.ПолучитьОбъект();	
			ОбъектДляУдаления.Удалить();
		
		КонецЦикла;	
		
	исключение
		
		ВызватьИсключение "Не удалось найти талицу " + ИмяКоллекции +"." + ИмяТаблицы;
		
	КонецПопытки;	
	
КонецПроцедуры	

&НаКлиенте
Функция ПолучитьПутьКФайлОтносительноКаталогоFeatures(ИмяФайлаСРасширением)
	ПутьКФайлу = "";
	
	СостояниеVanessaBehavior = Ванесса.ПолучитьСостояниеVanessaBehavior();
	
	ПутьКТекущемуFeatureФайлу = СостояниеVanessaBehavior.ТекущаяФича.ПолныйПуть;
	
	ПутьКФайлу = Лев(ПутьКТекущемуFeatureФайлу, СтрНайти(ПутьКТекущемуFeatureФайлу, "features") - 1) + ИмяФайлаСРасширением;
	
	Возврат ПутьКФайлу;
КонецФункции

&НаКлиенте
Процедура ЗагрузитьFixtureИзМакета(ИмяМакета)
	Ванесса.ЗапретитьВыполнениеШагов();
	
	НачальноеИмяФайла = ПолучитьПутьКФайлОтносительноКаталогоFeatures("tools\Выгрузка и загрузка данных XML.epf");
	
	Адрес = "";
	
	НачатьПомещениеФайла(Новый ОписаниеОповещения("ЗагрузитьFixtureИзМакетаЗавершение", ЭтотОбъект, ИмяМакета), Адрес, НачальноеИмяФайла, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьFixtureИзМакетаЗавершение(УдалосьПоместитьФайл, Адрес, ВыбранноеИмяФайла, ИмяМакета) Экспорт
	ЗагрузитьFixtureИзМакетаЗавершениеНаСервере(Адрес, ИмяМакета);
	
	Ванесса.ПродолжитьВыполнениеШагов();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьFixtureИзМакетаЗавершениеНаСервере(Адрес, ИмяМакета)
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	ВнешняяОбработка = ВнешниеОбработки.Создать(ИмяВременногоФайла, Ложь);
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	
	Текст = РеквизитФормыВЗначение("Объект").ПолучитьМакет(ИмяМакета).ПолучитьТекст();
	
	ВременныйДокумент = Новый ТекстовыйДокумент;
	ВременныйДокумент.УстановитьТекст(Текст);
	ВременныйДокумент.Записать(ИмяВременногоФайла, КодировкаТекста.UTF8);

	ВнешняяОбработка.ВыполнитьЗагрузку(ИмяВременногоФайла);
КонецПроцедуры

///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И я удаляю все элементы из "справочник" "Номенклатура"
//@ЯУдаляюВсеЭлементыИз(Парам01,Парам02)
Процедура ЯУдаляюВсеЭлементыИз(Парам01,Парам02) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	УдалитьВсеЭлементыТаблицыОбъектногоТипа(Парам01, Парам02);
КонецПроцедуры

&НаКлиенте
//и я загружаю данные из фикстуры "ЭлементыНоменклатуры"
//@ЯЗагружаюДанныеИзФикстуры(Парам01)
Процедура ЯЗагружаюДанныеИзФикстуры(ИмяМакета) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ЗагрузитьFixtureИзМакета(ИмяМакета)
КонецПроцедуры

&НаКлиенте
//Допустим я создаю новый документ
//@ЯСоздаюНовыйДокумент()
Процедура ЯСоздаюНовыйДокумент() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Когда я заполняю табличную часть
//@ЯЗаполняюТабличнуюЧасть()
Процедура ЯЗаполняюТабличнуюЧасть() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//и я выполняю проведение документа
//@ЯВыполняюПроведениеДокумента()
Процедура ЯВыполняюПроведениеДокумента() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Тогда документ проведен корретно
//@ДокументПроведенКорретно()
Процедура ДокументПроведенКорретно() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

//окончание текста модуля