{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,0,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},0,"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0},"//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВСправочникеНоменклатураПоявляютсяЭлементы()"",""ВСправочникеНоменклатураПоявляютсяЭлементы"",""тогда в справочнике номенклатура появляются элементы"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯЗагружаюДанныеИзФикстуры()"",""ЯЗагружаюДанныеИзФикстуры"",""Когда я загружаю данные из фикстуры """"ЭлементыНоменклатуры"""""");
	
	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции


&НаКлиенте
Функция ПолучитьПутьКФайлОтносительноКаталогоFeatures(ИмяФайлаСРасширением)
	ПутьКФайлу = """";
	
	СостояниеVanessaBehavior = Ванесса.ПолучитьСостояниеVanessaBehavior();
	
	ПутьКТекущемуFeatureФайлу = СостояниеVanessaBehavior.ТекущаяФича.ПолныйПуть;
	
	ПутьКФайлу = Лев(ПутьКТекущемуFeatureФайлу, СтрНайти(ПутьКТекущемуFeatureФайлу, ""features"") - 1) + ИмяФайлаСРасширением;
	
	Возврат ПутьКФайлу;
КонецФункции

&НаКлиенте
Функция ПолучитьПутьКОбработкеПроверкиПоведенияТекущейФичи()
	
	СостояниеVanessaBehavior = Ванесса.ПолучитьСостояниеVanessaBehavior();
	
	ПутьКТекущемуFeatureФайлу = СостояниеVanessaBehavior.ТекущаяФича.ПолныйПуть;
	
	Файл = Новый Файл(ПутьКТекущемуFeatureФайлу);
	
	ИмяТекущегоFeatureФайла = Файл.ИмяБезРасширения;
	КаталогТекущегоFeatureФайла = Файл.Путь;
	
	Файл = Неопределено;
	
	ПутьКОбработкеПроверкиПоведения = КаталогТекущегоFeatureФайла + ""step_definitions\"" + ИмяТекущегоFeatureФайла + "".epf""; 
	
	Возврат ПутьКОбработкеПроверкиПоведения;
КонецФункции

&НаКлиенте
Процедура ЗагрузитьFixtureИзМакета(ИмяМакета)
	Ванесса.ЗапретитьВыполнениеШагов();
		
	ДополнительныеПараметры = Новый Структура(""ИмяМакета"", ИмяМакета);
	
	ПоместитьОбработкуВыгрузкаИЗагрузкаДанныхXMLНаСервер(ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоместитьОбработкуВыгрузкаИЗагрузкаДанныхXMLНаСервер(ДополнительныеПараметры)
	
	НачальноеИмяФайла = ПолучитьПутьКФайлОтносительноКаталогоFeatures(""tools\Выгрузка и загрузка данных XML.epf"");
		
	Адрес = """";
	
	НачатьПомещениеФайла(Новый ОписаниеОповещения(""ПоместитьОбработкуВыгрузкаИЗагрузкаДанныхXMLНаСерверЗавершение"", ЭтотОбъект, ДополнительныеПараметры), Адрес, НачальноеИмяФайла, Ложь);
	
КонецПроцедуры	

&НаКлиенте
Процедура ПоместитьОбработкуВыгрузкаИЗагрузкаДанныхXMLНаСерверЗавершение(УдалосьПоместитьФайл, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	ДополнительныеПараметры.Вставить(""АдресОбработкиВыгрузкаИЗагрузкаДанныхXML"", Адрес);
	
	ПоместитьОбработкуПроверкиПоведенияНаСервер(ДополнительныеПараметры);
		
КонецПроцедуры

&НаКлиенте
Процедура ПоместитьОбработкуПроверкиПоведенияНаСервер(ДополнительныеПараметры)
	
	ПутьКОбработкеПроверкиПоведения = ПолучитьПутьКОбработкеПроверкиПоведенияТекущейФичи();
	
	Адрес = """";
	
	НачатьПомещениеФайла(Новый ОписаниеОповещения(""ПоместитьОбработкуПроверкиПоведенияНаСерверЗавершение"", ЭтотОбъект, ДополнительныеПараметры), Адрес, ПутьКОбработкеПроверкиПоведения, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоместитьОбработкуПроверкиПоведенияНаСерверЗавершение(УдалосьПоместитьФайл, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры)  Экспорт
	
	ДополнительныеПараметры.Вставить(""АдресОбработкиПроверкиПоведения"", Адрес);
	
	ЗагрузитьFixtureИзМакетаЗавершениеНаСервере(ДополнительныеПараметры);
	
	Ванесса.ПродолжитьВыполнениеШагов();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьFixtureИзМакетаЗавершениеНаСервере(ДополнительныеПараметры)
	
	АдресОбработкиВыгрузкаИЗагрузкаДанныхXML = ДополнительныеПараметры.АдресОбработкиВыгрузкаИЗагрузкаДанныхXML;
	АдресОбработкиПроверкиПоведения = ДополнительныеПараметры.АдресОбработкиПроверкиПоведения;
	ИмяМакета = ДополнительныеПараметры.ИмяМакета;
	
	ВыгрузкаИЗагрузкаДанныхXML = ПолучитьОбъектОбработкиПоАдресу(АдресОбработкиВыгрузкаИЗагрузкаДанныхXML);
	ОбработкаПроверкиПоведения = ПолучитьОбъектОбработкиПоАдресу(АдресОбработкиПроверкиПоведения);
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	
	Текст = ОбработкаПроверкиПоведения.ПолучитьМакет(ИмяМакета).ПолучитьТекст();
	
	ВременныйДокумент = Новый ТекстовыйДокумент;
	ВременныйДокумент.УстановитьТекст(Текст);
	ВременныйДокумент.Записать(ИмяВременногоФайла, КодировкаТекста.UTF8);

	ВыгрузкаИЗагрузкаДанныхXML.ВыполнитьЗагрузку(ИмяВременногоФайла);
КонецПроцедуры

&НаСервере
Функция ПолучитьОбъектОбработкиПоАдресу(АдресВХранилище)
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВХранилище);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	ВнешняяОбработка = ВнешниеОбработки.Создать(ИмяВременногоФайла, Ложь);
	
	Возврат ВнешняяОбработка;
	
КонецФункции	


///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//тогда в справочнике номенклатура появляются элементы
//@ВСправочникеНоменклатураПоявляютсяЭлементы()
Процедура ВСправочникеНоменклатураПоявляютсяЭлементы() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//и я загружаю данные из фикстуры ""ЭлементыНоменклатуры""
//@ЯЗагружаюДанныеИзФикстуры(Парам01)
Процедура ЯЗагружаюДанныеИзФикстуры(ИмяМакета) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ЗагрузитьFixtureИзМакета(ИмяМакета)
КонецПроцедуры

//окончание текста модуля",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}